{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malot\\\\OneDrive\\\\Desktop\\\\Job\\\\Website Practice\\\\Netflix\\\\client\\\\src\\\\components\\\\QuestionsDisplay.jsx\";\nimport React from \"react\";\nimport RegisterationForm from \"./RegisterationForm\";\n\nfunction QuestionsDisplay(props) {\n  function handleClick(event) {\n    const {\n      name\n    } = event.target;\n\n    if (name !== undefined) {\n      var whichQuestion = name.slice(-1);\n      var elementAnswer = \"div[name='answer-\" + whichQuestion + \"']\";\n      var findAnswer = document.querySelector(elementAnswer);\n      findAnswer.hidden = !findAnswer.hidden;\n    }\n  }\n\n  function createQuestion(question, index) {\n    var questionName = \"question-\" + index;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      name: questionName,\n      type: \"button\",\n      className: \"question-button list-group-item list-group-item-action\",\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, question.question, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"question-icon fas fa-plus fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  function createAnswer(question, index) {\n    var answerName = \"answer-\" + index;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      name: answerName,\n      className: \"question-answer\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, question.answer.map(paragraph => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, paragraph), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"basic-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"question-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Frequently Asked Questions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-list list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.questions.map((question, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quesiton-list-item list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, createQuestion(question, index), createAnswer(question, index));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, RegisterationForm())));\n}\n\nexport default QuestionsDisplay;","map":{"version":3,"sources":["C:/Users/malot/OneDrive/Desktop/Job/Website Practice/Netflix/client/src/components/QuestionsDisplay.jsx"],"names":["React","RegisterationForm","QuestionsDisplay","props","handleClick","event","name","target","undefined","whichQuestion","slice","elementAnswer","findAnswer","document","querySelector","hidden","createQuestion","question","index","questionName","createAnswer","answerName","answer","map","paragraph","questions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAE/B,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,UAAM;AAACC,MAAAA;AAAD,QAASD,KAAK,CAACE,MAArB;;AAEA,QAAGD,IAAI,KAAKE,SAAZ,EAAsB;AACpB,UAAIC,aAAa,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAC,CAAZ,CAApB;AACA,UAAIC,aAAa,GAAG,sBAAsBF,aAAtB,GAAsC,IAA1D;AACA,UAAIG,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuBH,aAAvB,CAAjB;AACAC,MAAAA,UAAU,CAACG,MAAX,GAAoB,CAACH,UAAU,CAACG,MAAhC;AACD;AACF;;AAED,WAASC,cAAT,CAAwBC,QAAxB,EAAkCC,KAAlC,EAAwC;AACtC,QAAIC,YAAY,GAAG,cAAcD,KAAjC;AAEA,wBACA;AACE,MAAA,IAAI,EAAEC,YADR;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,wDAHZ;AAIE,MAAA,OAAO,EAAEf,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGa,QAAQ,CAACA,QALZ,eAME;AAAG,MAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADA;AAUD;;AAED,WAASG,YAAT,CAAsBH,QAAtB,EAAgCC,KAAhC,EAAsC;AACpC,QAAIG,UAAU,GAAG,YAAYH,KAA7B;AAEA,wBACE;AACE,MAAA,IAAI,EAAEG,UADR;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,MAAM,EAAE,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QAAQ,CAACK,MAAT,CAAgBC,GAAhB,CAAoBC,SAAS,IAAI;AAChC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,SAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KAPA,CADH,CAJF,CADF;AAiBD;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGrB,KAAK,CAACsB,SAAN,CAAgBF,GAAhB,CAAoB,CAACN,QAAD,EAAWC,KAAX,KAAqB;AACxC,wBACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,cAAc,CAACC,QAAD,EAAWC,KAAX,CADjB,EAEGE,YAAY,CAACH,QAAD,EAAWC,KAAX,CAFf,CADF;AAKA,GAND,CAFH,CAFF,eAaE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,iBAAiB,EADpB,CAbF,CADF,CADF;AAqBD;;AAED,eAAeC,gBAAf","sourcesContent":["import React from \"react\";\r\nimport RegisterationForm from \"./RegisterationForm\";\r\n\r\nfunction QuestionsDisplay(props) {\r\n\r\n  function handleClick(event) {\r\n    const {name} = event.target;\r\n\r\n    if(name !== undefined){\r\n      var whichQuestion = name.slice(-1);\r\n      var elementAnswer = \"div[name='answer-\" + whichQuestion + \"']\"\r\n      var findAnswer = document.querySelector(elementAnswer);\r\n      findAnswer.hidden = !findAnswer.hidden;\r\n    }\r\n  }\r\n\r\n  function createQuestion(question, index){\r\n    var questionName = \"question-\" + index;\r\n\r\n    return(\r\n    <button\r\n      name={questionName}\r\n      type=\"button\"\r\n      className=\"question-button list-group-item list-group-item-action\"\r\n      onClick={handleClick}>\r\n      {question.question}\r\n      <i className=\"question-icon fas fa-plus fa-lg\"></i>\r\n    </button>\r\n   );\r\n  }\r\n\r\n  function createAnswer(question, index){\r\n    var answerName = \"answer-\" + index;\r\n\r\n    return(\r\n      <div\r\n        name={answerName}\r\n        className=\"question-answer\"\r\n        hidden={true}>\r\n        <span>\r\n          {question.answer.map(paragraph => {\r\n            return(\r\n              <div>\r\n                <h2>{paragraph}</h2>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"basic-container\">\r\n      <div className=\"question-container\">\r\n        <h1 className=\"question-title\">Frequently Asked Questions</h1>\r\n        <div className=\"question-list list-group\">\r\n\r\n          {props.questions.map((question, index) => {\r\n            return(\r\n              <div className=\"quesiton-list-item list-group-item\">\r\n                {createQuestion(question, index)}\r\n                {createAnswer(question, index)}\r\n              </div>);\r\n           })}\r\n\r\n        </div>\r\n        <div className=\"question-form\">\r\n          {RegisterationForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionsDisplay;\r\n"]},"metadata":{},"sourceType":"module"}